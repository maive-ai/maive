/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthedRouteImport } from './routes/_authed'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthSignupSuccessRouteImport } from './routes/auth/signup-success'
import { Route as AuthErrorRouteImport } from './routes/auth/error'
import { Route as AuthedSimplePhoneInputRouteImport } from './routes/_authed/simple-phone-input'
import { Route as AuthedProjectsRouteImport } from './routes/_authed/projects'
import { Route as AuthedProjectDetailRouteImport } from './routes/_authed/project-detail'
import { Route as AuthedCreateProjectRouteImport } from './routes/_authed/create-project'
import { Route as AuthedChatRouteImport } from './routes/_authed/chat'
import { Route as AuthedWorkflowsIndexRouteImport } from './routes/_authed/workflows/index'
import { Route as AuthedVoiceAiIndexRouteImport } from './routes/_authed/voice-ai/index'
import { Route as AuthedWorkflowsNew_workflowRouteImport } from './routes/_authed/workflows/new_workflow'
import { Route as AuthedWorkflowsWorkflowIdRouteImport } from './routes/_authed/workflows/$workflowId'
import { Route as AuthedVoiceAiCustomerIdRouteImport } from './routes/_authed/voice-ai/$customerId'

const AuthedRoute = AuthedRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupSuccessRoute = AuthSignupSuccessRouteImport.update({
  id: '/auth/signup-success',
  path: '/auth/signup-success',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthErrorRoute = AuthErrorRouteImport.update({
  id: '/auth/error',
  path: '/auth/error',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedSimplePhoneInputRoute = AuthedSimplePhoneInputRouteImport.update({
  id: '/simple-phone-input',
  path: '/simple-phone-input',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedProjectsRoute = AuthedProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedProjectDetailRoute = AuthedProjectDetailRouteImport.update({
  id: '/project-detail',
  path: '/project-detail',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedCreateProjectRoute = AuthedCreateProjectRouteImport.update({
  id: '/create-project',
  path: '/create-project',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedChatRoute = AuthedChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedWorkflowsIndexRoute = AuthedWorkflowsIndexRouteImport.update({
  id: '/workflows/',
  path: '/workflows/',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedVoiceAiIndexRoute = AuthedVoiceAiIndexRouteImport.update({
  id: '/voice-ai/',
  path: '/voice-ai/',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedWorkflowsNew_workflowRoute =
  AuthedWorkflowsNew_workflowRouteImport.update({
    id: '/workflows/new_workflow',
    path: '/workflows/new_workflow',
    getParentRoute: () => AuthedRoute,
  } as any)
const AuthedWorkflowsWorkflowIdRoute =
  AuthedWorkflowsWorkflowIdRouteImport.update({
    id: '/workflows/$workflowId',
    path: '/workflows/$workflowId',
    getParentRoute: () => AuthedRoute,
  } as any)
const AuthedVoiceAiCustomerIdRoute = AuthedVoiceAiCustomerIdRouteImport.update({
  id: '/voice-ai/$customerId',
  path: '/voice-ai/$customerId',
  getParentRoute: () => AuthedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/chat': typeof AuthedChatRoute
  '/create-project': typeof AuthedCreateProjectRoute
  '/project-detail': typeof AuthedProjectDetailRoute
  '/projects': typeof AuthedProjectsRoute
  '/simple-phone-input': typeof AuthedSimplePhoneInputRoute
  '/auth/error': typeof AuthErrorRoute
  '/auth/signup-success': typeof AuthSignupSuccessRoute
  '/voice-ai/$customerId': typeof AuthedVoiceAiCustomerIdRoute
  '/workflows/$workflowId': typeof AuthedWorkflowsWorkflowIdRoute
  '/workflows/new_workflow': typeof AuthedWorkflowsNew_workflowRoute
  '/voice-ai': typeof AuthedVoiceAiIndexRoute
  '/workflows': typeof AuthedWorkflowsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/chat': typeof AuthedChatRoute
  '/create-project': typeof AuthedCreateProjectRoute
  '/project-detail': typeof AuthedProjectDetailRoute
  '/projects': typeof AuthedProjectsRoute
  '/simple-phone-input': typeof AuthedSimplePhoneInputRoute
  '/auth/error': typeof AuthErrorRoute
  '/auth/signup-success': typeof AuthSignupSuccessRoute
  '/voice-ai/$customerId': typeof AuthedVoiceAiCustomerIdRoute
  '/workflows/$workflowId': typeof AuthedWorkflowsWorkflowIdRoute
  '/workflows/new_workflow': typeof AuthedWorkflowsNew_workflowRoute
  '/voice-ai': typeof AuthedVoiceAiIndexRoute
  '/workflows': typeof AuthedWorkflowsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/_authed/chat': typeof AuthedChatRoute
  '/_authed/create-project': typeof AuthedCreateProjectRoute
  '/_authed/project-detail': typeof AuthedProjectDetailRoute
  '/_authed/projects': typeof AuthedProjectsRoute
  '/_authed/simple-phone-input': typeof AuthedSimplePhoneInputRoute
  '/auth/error': typeof AuthErrorRoute
  '/auth/signup-success': typeof AuthSignupSuccessRoute
  '/_authed/voice-ai/$customerId': typeof AuthedVoiceAiCustomerIdRoute
  '/_authed/workflows/$workflowId': typeof AuthedWorkflowsWorkflowIdRoute
  '/_authed/workflows/new_workflow': typeof AuthedWorkflowsNew_workflowRoute
  '/_authed/voice-ai/': typeof AuthedVoiceAiIndexRoute
  '/_authed/workflows/': typeof AuthedWorkflowsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/chat'
    | '/create-project'
    | '/project-detail'
    | '/projects'
    | '/simple-phone-input'
    | '/auth/error'
    | '/auth/signup-success'
    | '/voice-ai/$customerId'
    | '/workflows/$workflowId'
    | '/workflows/new_workflow'
    | '/voice-ai'
    | '/workflows'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/chat'
    | '/create-project'
    | '/project-detail'
    | '/projects'
    | '/simple-phone-input'
    | '/auth/error'
    | '/auth/signup-success'
    | '/voice-ai/$customerId'
    | '/workflows/$workflowId'
    | '/workflows/new_workflow'
    | '/voice-ai'
    | '/workflows'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/_authed/chat'
    | '/_authed/create-project'
    | '/_authed/project-detail'
    | '/_authed/projects'
    | '/_authed/simple-phone-input'
    | '/auth/error'
    | '/auth/signup-success'
    | '/_authed/voice-ai/$customerId'
    | '/_authed/workflows/$workflowId'
    | '/_authed/workflows/new_workflow'
    | '/_authed/voice-ai/'
    | '/_authed/workflows/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  AuthErrorRoute: typeof AuthErrorRoute
  AuthSignupSuccessRoute: typeof AuthSignupSuccessRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup-success': {
      id: '/auth/signup-success'
      path: '/auth/signup-success'
      fullPath: '/auth/signup-success'
      preLoaderRoute: typeof AuthSignupSuccessRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/error': {
      id: '/auth/error'
      path: '/auth/error'
      fullPath: '/auth/error'
      preLoaderRoute: typeof AuthErrorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/simple-phone-input': {
      id: '/_authed/simple-phone-input'
      path: '/simple-phone-input'
      fullPath: '/simple-phone-input'
      preLoaderRoute: typeof AuthedSimplePhoneInputRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/projects': {
      id: '/_authed/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof AuthedProjectsRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/project-detail': {
      id: '/_authed/project-detail'
      path: '/project-detail'
      fullPath: '/project-detail'
      preLoaderRoute: typeof AuthedProjectDetailRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/create-project': {
      id: '/_authed/create-project'
      path: '/create-project'
      fullPath: '/create-project'
      preLoaderRoute: typeof AuthedCreateProjectRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/chat': {
      id: '/_authed/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof AuthedChatRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/workflows/': {
      id: '/_authed/workflows/'
      path: '/workflows'
      fullPath: '/workflows'
      preLoaderRoute: typeof AuthedWorkflowsIndexRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/voice-ai/': {
      id: '/_authed/voice-ai/'
      path: '/voice-ai'
      fullPath: '/voice-ai'
      preLoaderRoute: typeof AuthedVoiceAiIndexRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/workflows/new_workflow': {
      id: '/_authed/workflows/new_workflow'
      path: '/workflows/new_workflow'
      fullPath: '/workflows/new_workflow'
      preLoaderRoute: typeof AuthedWorkflowsNew_workflowRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/workflows/$workflowId': {
      id: '/_authed/workflows/$workflowId'
      path: '/workflows/$workflowId'
      fullPath: '/workflows/$workflowId'
      preLoaderRoute: typeof AuthedWorkflowsWorkflowIdRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/voice-ai/$customerId': {
      id: '/_authed/voice-ai/$customerId'
      path: '/voice-ai/$customerId'
      fullPath: '/voice-ai/$customerId'
      preLoaderRoute: typeof AuthedVoiceAiCustomerIdRouteImport
      parentRoute: typeof AuthedRoute
    }
  }
}

interface AuthedRouteChildren {
  AuthedChatRoute: typeof AuthedChatRoute
  AuthedCreateProjectRoute: typeof AuthedCreateProjectRoute
  AuthedProjectDetailRoute: typeof AuthedProjectDetailRoute
  AuthedProjectsRoute: typeof AuthedProjectsRoute
  AuthedSimplePhoneInputRoute: typeof AuthedSimplePhoneInputRoute
  AuthedVoiceAiCustomerIdRoute: typeof AuthedVoiceAiCustomerIdRoute
  AuthedWorkflowsWorkflowIdRoute: typeof AuthedWorkflowsWorkflowIdRoute
  AuthedWorkflowsNew_workflowRoute: typeof AuthedWorkflowsNew_workflowRoute
  AuthedVoiceAiIndexRoute: typeof AuthedVoiceAiIndexRoute
  AuthedWorkflowsIndexRoute: typeof AuthedWorkflowsIndexRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedChatRoute: AuthedChatRoute,
  AuthedCreateProjectRoute: AuthedCreateProjectRoute,
  AuthedProjectDetailRoute: AuthedProjectDetailRoute,
  AuthedProjectsRoute: AuthedProjectsRoute,
  AuthedSimplePhoneInputRoute: AuthedSimplePhoneInputRoute,
  AuthedVoiceAiCustomerIdRoute: AuthedVoiceAiCustomerIdRoute,
  AuthedWorkflowsWorkflowIdRoute: AuthedWorkflowsWorkflowIdRoute,
  AuthedWorkflowsNew_workflowRoute: AuthedWorkflowsNew_workflowRoute,
  AuthedVoiceAiIndexRoute: AuthedVoiceAiIndexRoute,
  AuthedWorkflowsIndexRoute: AuthedWorkflowsIndexRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  AuthErrorRoute: AuthErrorRoute,
  AuthSignupSuccessRoute: AuthSignupSuccessRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
