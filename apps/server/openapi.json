{
  "openapi": "3.1.0",
  "info": {
    "title": "Maive API",
    "description": "API for Maive application",
    "version": "0.1.0"
  },
  "paths": {
    "/api/auth/signout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Sign Out",
        "description": "Sign out the current user.\n\nInvalidates the current user's session and clears cookies.",
        "operationId": "sign_out_api_auth_signout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get Current User Info",
        "description": "Get current user information.\n\nReturns the profile information of the currently authenticated user.",
        "operationId": "get_current_user_info_api_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/callback": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Oauth Callback",
        "description": "OAuth2 callback endpoint for Cognito authentication.\n\nExchanges authorization code for tokens and redirects to frontend.",
        "operationId": "oauth_callback_api_auth_callback_get",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Code"
            }
          },
          {
            "name": "error",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Error"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh Token",
        "description": "Refresh access token using refresh token.\n\nUses the refresh token from cookies to get a new access token.",
        "operationId": "refresh_token_api_auth_refresh_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/jobs/{job_id}": {
      "get": {
        "tags": [
          "CRM"
        ],
        "summary": "Get Job",
        "description": "Get a specific job by ID.\n\nThis endpoint works across all CRM providers and returns a standardized Job schema.\n\nArgs:\n    job_id: The unique identifier for the job (provider-specific format)\n    crm_service: The CRM service instance from dependency injection\n\nReturns:\n    Job: The job information in universal format\n\nRaises:\n    HTTPException: If the job is not found or an error occurs",
        "operationId": "get_job_api_crm_jobs__job_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Job"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/jobs": {
      "get": {
        "tags": [
          "CRM"
        ],
        "summary": "Get All Jobs",
        "description": "Get all jobs with pagination.\n\nThis endpoint works across all CRM providers and returns a standardized JobList schema.\n\nArgs:\n    page: Page number (1-indexed)\n    page_size: Number of items per page (max 100)\n    crm_service: The CRM service instance from dependency injection\n\nReturns:\n    JobList: Paginated list of jobs in universal format\n\nRaises:\n    HTTPException: If an error occurs while fetching jobs",
        "operationId": "get_all_jobs_api_crm_jobs_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number (1-indexed)",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number (1-indexed)"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of items per page",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/jobs/{job_id}/notes": {
      "post": {
        "tags": [
          "CRM"
        ],
        "summary": "Add Job Note",
        "description": "Add a note to a job.\n\nThis endpoint works across all CRM providers and returns a standardized Note schema.\n\nArgs:\n    job_id: The unique identifier for the job\n    text: The text content of the note\n    pin_to_top: Whether to pin the note to the top (provider-specific, may not be supported)\n    crm_service: The CRM service instance from dependency injection\n\nReturns:\n    Note: The created note in universal format\n\nRaises:\n    HTTPException: If the job is not found or an error occurs",
        "operationId": "add_job_note_api_crm_jobs__job_id__notes_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_add_job_note_api_crm_jobs__job_id__notes_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/jobs/{job_id}/status": {
      "patch": {
        "tags": [
          "CRM"
        ],
        "summary": "Update Job Status",
        "description": "Update the status of a job.\n\nThis endpoint works across all CRM providers.\n\nArgs:\n    job_id: The unique identifier for the job\n    status_value: The new status value (provider-specific format)\n    crm_service: The CRM service instance from dependency injection\n\nRaises:\n    HTTPException: If the job is not found or an error occurs",
        "operationId": "update_job_status_api_crm_jobs__job_id__status_patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_job_status_api_crm_jobs__job_id__status_patch"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/projects/{project_id}": {
      "get": {
        "tags": [
          "CRM"
        ],
        "summary": "Get Project",
        "description": "Get a specific project by ID.\n\nThis endpoint works across all CRM providers and returns a standardized Project schema.\n\nNote: In flat CRMs like JobNimbus, projects and jobs are the same entity.\n\nArgs:\n    project_id: The unique identifier for the project (provider-specific format)\n    crm_service: The CRM service instance from dependency injection\n\nReturns:\n    Project: The project information in universal format\n\nRaises:\n    HTTPException: If the project is not found or an error occurs",
        "operationId": "get_project_api_crm_projects__project_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/projects": {
      "get": {
        "tags": [
          "CRM"
        ],
        "summary": "Get All Projects",
        "description": "Get all projects with pagination.\n\nThis endpoint works across all CRM providers and returns a standardized ProjectList schema.\n\nArgs:\n    page: Page number (1-indexed)\n    page_size: Number of items per page (max 100)\n    crm_service: The CRM service instance from dependency injection\n\nReturns:\n    ProjectList: Paginated list of projects in universal format\n\nRaises:\n    HTTPException: If an error occurs while fetching projects",
        "operationId": "get_all_projects_api_crm_projects_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number (1-indexed)",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number (1-indexed)"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of items per page",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/projects/{project_id}/status": {
      "patch": {
        "tags": [
          "CRM"
        ],
        "summary": "Update Project Status",
        "description": "Update the status of a project.\n\nThis endpoint works across all CRM providers.\n\nArgs:\n    project_id: The unique identifier for the project\n    status_value: The new status value (provider-specific format)\n    crm_service: The CRM service instance from dependency injection\n\nRaises:\n    HTTPException: If the project is not found or an error occurs",
        "operationId": "update_project_status_api_crm_projects__project_id__status_patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_project_status_api_crm_projects__project_id__status_patch"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/contacts/{contact_id}": {
      "get": {
        "tags": [
          "CRM"
        ],
        "summary": "Get Contact",
        "description": "Get a specific contact by ID.\n\nThis endpoint works across all CRM providers and returns a standardized Contact schema.\n\nArgs:\n    contact_id: The unique identifier for the contact (provider-specific format)\n    crm_service: The CRM service instance from dependency injection\n\nReturns:\n    Contact: The contact information in universal format\n\nRaises:\n    HTTPException: If the contact is not found or an error occurs",
        "operationId": "get_contact_api_crm_contacts__contact_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Contact Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/contacts": {
      "get": {
        "tags": [
          "CRM"
        ],
        "summary": "Get All Contacts",
        "description": "Get all contacts with pagination.\n\nThis endpoint works across all CRM providers and returns a standardized ContactList schema.\n\nArgs:\n    page: Page number (1-indexed)\n    page_size: Number of items per page (max 100)\n    crm_service: The CRM service instance from dependency injection\n\nReturns:\n    ContactList: Paginated list of contacts in universal format\n\nRaises:\n    HTTPException: If an error occurs while fetching contacts",
        "operationId": "get_all_contacts_api_crm_contacts_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number (1-indexed)",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number (1-indexed)"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Number of items per page",
              "default": 50,
              "title": "Page Size"
            },
            "description": "Number of items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContactList"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/contacts/{contact_id}/notes": {
      "post": {
        "tags": [
          "CRM"
        ],
        "summary": "Add Contact Note",
        "description": "Add a note to a contact.\n\nThis endpoint works across all CRM providers and returns a standardized Note schema.\n\nArgs:\n    contact_id: The unique identifier for the contact\n    text: The text content of the note\n    pin_to_top: Whether to pin the note to the top (provider-specific, may not be supported)\n    crm_service: The CRM service instance from dependency injection\n\nReturns:\n    Note: The created note in universal format\n\nRaises:\n    HTTPException: If the contact is not found or an error occurs",
        "operationId": "add_contact_note_api_crm_contacts__contact_id__notes_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Contact Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_add_contact_note_api_crm_contacts__contact_id__notes_post"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Note"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/voice-ai/calls/active": {
      "get": {
        "tags": [
          "Voice AI"
        ],
        "summary": "Get Active Call",
        "description": "Get the user's currently active call.\n\nReturns the active call state if one exists, otherwise returns None (404).\n\nArgs:\n    current_user: The authenticated user\n    call_state_service: The call state service instance from dependency injection\n\nReturns:\n    ActiveCallState | None: The active call state or None if no active call\n\nRaises:\n    HTTPException: If an error occurs retrieving the call state",
        "operationId": "get_active_call_api_voice_ai_calls_active_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ActiveCallState"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Active Call Api Voice Ai Calls Active Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/voice-ai/calls/{call_id}": {
      "get": {
        "tags": [
          "Voice AI"
        ],
        "summary": "Get Call Status",
        "description": "Get the status of a specific call by ID.\n\nArgs:\n    call_id: The unique identifier for the call\n    current_user: The authenticated user\n    voice_ai_service: The Voice AI service instance from dependency injection\n\nReturns:\n    CallResponse: The call status information\n\nRaises:\n    HTTPException: If the call is not found or an error occurs",
        "operationId": "get_call_status_api_voice_ai_calls__call_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "call_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Call Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Voice AI"
        ],
        "summary": "End Call",
        "description": "End an ongoing call programmatically.\n\nArgs:\n    call_id: The unique identifier for the call to end\n    current_user: The authenticated user\n    voice_ai_service: The Voice AI service instance from dependency injection\n    \nRaises:\n    HTTPException: If the call is not found or cannot be ended",
        "operationId": "end_call_api_voice_ai_calls__call_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "call_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Call Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflows/call-and-write-results-to-crm": {
      "post": {
        "tags": [
          "Workflows"
        ],
        "summary": "Call And Write Results To Crm",
        "description": "Create an outbound call with monitoring and write results to CRM.\n\nThis workflow endpoint orchestrates:\n1. Creating the call via Voice AI provider\n2. Starting background call monitoring and writing results to CRM\n3. Updating CRM with call results when complete\n\nArgs:\n    request: The call request with phone number and context\n    current_user: The authenticated user\n    workflow: The call monitoring and CRM writing workflow from dependency injection\n\nReturns:\n    CallResponse: The call information\n\nRaises:\n    HTTPException: If call creation fails",
        "operationId": "call_and_write_results_to_crm_api_workflows_call_and_write_results_to_crm_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CallResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint.",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/healthcheck": {
      "get": {
        "summary": "Healthcheck",
        "description": "Health check endpoint.",
        "operationId": "healthcheck_healthcheck_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ActiveCallState": {
        "properties": {
          "user_id": {
            "type": "string",
            "title": "User Id",
            "description": "Cognito user ID (sub)"
          },
          "call_id": {
            "type": "string",
            "title": "Call Id",
            "description": "Provider call ID"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "Project/Job ID"
          },
          "status": {
            "$ref": "#/components/schemas/CallStatus",
            "description": "Current call status"
          },
          "provider": {
            "$ref": "#/components/schemas/VoiceAIProvider",
            "description": "Voice AI provider"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number",
            "description": "Phone number called"
          },
          "listen_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Listen Url",
            "description": "WebSocket URL for listening to call"
          },
          "started_at": {
            "type": "string",
            "format": "date-time",
            "title": "Started At",
            "description": "Call start timestamp"
          },
          "provider_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Data",
            "description": "Raw provider response data"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "call_id",
          "project_id",
          "status",
          "provider",
          "phone_number",
          "started_at"
        ],
        "title": "ActiveCallState",
        "description": "Model for active call state stored in DynamoDB.\n\nThis represents a user's currently active call session."
      },
      "AnalysisData": {
        "properties": {
          "summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary",
            "description": "Call summary"
          },
          "structured_data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ClaimStatusData"
              },
              {
                "type": "null"
              }
            ],
            "description": "Structured data extraction"
          },
          "success_evaluation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Success Evaluation",
            "description": "Success evaluation"
          }
        },
        "type": "object",
        "title": "AnalysisData",
        "description": "Provider-agnostic analysis data from completed calls."
      },
      "AuthResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Whether the operation was successful"
          },
          "session": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session",
            "description": "User session data"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if operation failed"
          },
          "requires_mfa": {
            "type": "boolean",
            "title": "Requires Mfa",
            "description": "Whether MFA is required",
            "default": false
          },
          "mfa_setup_required": {
            "type": "boolean",
            "title": "Mfa Setup Required",
            "description": "Whether MFA setup is required",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "AuthResponse",
        "description": "Schema for authentication responses."
      },
      "Body_add_contact_note_api_crm_contacts__contact_id__notes_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The note text content"
          },
          "pin_to_top": {
            "type": "boolean",
            "title": "Pin To Top",
            "description": "Whether to pin the note to the top",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_add_contact_note_api_crm_contacts__contact_id__notes_post"
      },
      "Body_add_job_note_api_crm_jobs__job_id__notes_post": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "The note text content"
          },
          "pin_to_top": {
            "type": "boolean",
            "title": "Pin To Top",
            "description": "Whether to pin the note to the top",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_add_job_note_api_crm_jobs__job_id__notes_post"
      },
      "Body_update_job_status_api_crm_jobs__job_id__status_patch": {
        "properties": {
          "status_value": {
            "type": "string",
            "title": "Status Value",
            "description": "The new status value"
          }
        },
        "type": "object",
        "required": [
          "status_value"
        ],
        "title": "Body_update_job_status_api_crm_jobs__job_id__status_patch"
      },
      "Body_update_project_status_api_crm_projects__project_id__status_patch": {
        "properties": {
          "status_value": {
            "type": "string",
            "title": "Status Value",
            "description": "The new status value"
          }
        },
        "type": "object",
        "required": [
          "status_value"
        ],
        "title": "Body_update_project_status_api_crm_projects__project_id__status_patch"
      },
      "CRMProvider": {
        "type": "string",
        "enum": [
          "service_titan",
          "job_nimbus",
          "mock"
        ],
        "title": "CRMProvider",
        "description": "Available CRM providers."
      },
      "CallRequest": {
        "properties": {
          "phone_number": {
            "type": "string",
            "title": "Phone Number",
            "description": "Phone number to call"
          },
          "customer_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Id",
            "description": "Customer identifier"
          },
          "customer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Name",
            "description": "Customer name"
          },
          "company_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company Name",
            "description": "Company name"
          },
          "customer_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Address",
            "description": "Customer address"
          },
          "claim_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Claim Number",
            "description": "Insurance claim number"
          },
          "date_of_loss": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Loss",
            "description": "Date of loss for insurance claim"
          },
          "insurance_agency": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Insurance Agency",
            "description": "Insurance agency name"
          },
          "adjuster_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Adjuster Name",
            "description": "Insurance adjuster name"
          },
          "adjuster_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Adjuster Phone",
            "description": "Insurance adjuster phone"
          },
          "metadata": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metadata",
            "description": "Additional metadata"
          },
          "job_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Id",
            "description": "Job/Project ID (int for Service Titan, str for JobNimbus/Mock)"
          },
          "tenant": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tenant",
            "description": "Tenant ID"
          }
        },
        "type": "object",
        "required": [
          "phone_number"
        ],
        "title": "CallRequest",
        "description": "Request model for creating an outbound call."
      },
      "CallResponse": {
        "properties": {
          "call_id": {
            "type": "string",
            "title": "Call Id",
            "description": "Unique call identifier"
          },
          "status": {
            "$ref": "#/components/schemas/CallStatus",
            "description": "Current call status"
          },
          "provider": {
            "$ref": "#/components/schemas/VoiceAIProvider",
            "description": "Voice AI provider"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Call creation timestamp"
          },
          "provider_data": {
            "title": "Provider Data",
            "description": "Provider-specific data (VapiCall for Vapi, dict for others)"
          },
          "analysis": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AnalysisData"
              },
              {
                "type": "null"
              }
            ],
            "description": "Typed analysis data (extracted from provider_data)"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/TranscriptMessage"
            },
            "type": "array",
            "title": "Messages",
            "description": "Transcript messages from the call"
          }
        },
        "type": "object",
        "required": [
          "call_id",
          "status",
          "provider"
        ],
        "title": "CallResponse",
        "description": "Response model for call information."
      },
      "CallStatus": {
        "type": "string",
        "enum": [
          "queued",
          "ringing",
          "in_progress",
          "forwarding",
          "ended",
          "busy",
          "no_answer",
          "failed",
          "canceled",
          "['ended', 'failed', 'canceled', 'busy', 'no_answer']"
        ],
        "title": "CallStatus",
        "description": "Call status values across Voice AI systems."
      },
      "ClaimStatusData": {
        "properties": {
          "call_outcome": {
            "type": "string",
            "title": "Call Outcome",
            "description": "Call outcome: success, voicemail, gatekeeper, failed",
            "default": "unknown"
          },
          "claim_status": {
            "type": "string",
            "title": "Claim Status",
            "description": "Project/job status from call: e.g. 'Completed', 'Hold', 'Pending Review', etc.",
            "default": ""
          },
          "payment_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PaymentDetails"
              },
              {
                "type": "null"
              }
            ],
            "description": "Payment details"
          },
          "required_actions": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RequiredActions"
              },
              {
                "type": "null"
              }
            ],
            "description": "Required actions"
          },
          "claim_update_summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Claim Update Summary",
            "description": "Summary of the call for notes"
          }
        },
        "type": "object",
        "title": "ClaimStatusData",
        "description": "Provider-agnostic structured data from insurance claim status calls.\n\nNote: claim_status now represents the project/job status in the CRM.\nDifferent CRM providers have different status values."
      },
      "Contact": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique contact identifier (provider-specific format)"
          },
          "first_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Name",
            "description": "First name"
          },
          "last_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Name",
            "description": "Last name"
          },
          "company": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Company",
            "description": "Company name"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name",
            "description": "Display name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "Email address"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone",
            "description": "Primary phone number"
          },
          "mobile_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mobile Phone",
            "description": "Mobile phone"
          },
          "work_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Work Phone",
            "description": "Work phone"
          },
          "address_line1": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Line1",
            "description": "Address line 1"
          },
          "address_line2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Line2",
            "description": "Address line 2"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City",
            "description": "City"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State",
            "description": "State/province"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code",
            "description": "ZIP/postal code"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Country"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "Contact status"
          },
          "workflow_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Type",
            "description": "Workflow/record type name"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp (ISO format)"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Last update timestamp (ISO format)"
          },
          "provider": {
            "$ref": "#/components/schemas/CRMProvider",
            "description": "CRM provider name"
          },
          "provider_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Provider Data",
            "description": "Provider-specific data"
          }
        },
        "type": "object",
        "required": [
          "id",
          "provider"
        ],
        "title": "Contact",
        "description": "Universal contact/customer model that works across all CRM providers."
      },
      "ContactList": {
        "properties": {
          "contacts": {
            "items": {
              "$ref": "#/components/schemas/Contact"
            },
            "type": "array",
            "title": "Contacts",
            "description": "List of contacts"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "description": "Total number of contacts"
          },
          "provider": {
            "$ref": "#/components/schemas/CRMProvider",
            "description": "CRM provider name"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page",
            "description": "Current page number (if paginated)"
          },
          "page_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Size",
            "description": "Page size (if paginated)"
          },
          "has_more": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has More",
            "description": "Whether more results exist"
          }
        },
        "type": "object",
        "required": [
          "contacts",
          "total_count",
          "provider"
        ],
        "title": "ContactList",
        "description": "Universal contact list response with pagination."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Job": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique job identifier (provider-specific format)"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Job name/title"
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number",
            "description": "Job number"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Current job status (provider-specific)"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id",
            "description": "Status identifier"
          },
          "workflow_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Type",
            "description": "Workflow/record type name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Job description"
          },
          "customer_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Id",
            "description": "Associated customer/contact ID"
          },
          "customer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Name",
            "description": "Customer name"
          },
          "address_line1": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Line1",
            "description": "Address line 1"
          },
          "address_line2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Line2",
            "description": "Address line 2"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City",
            "description": "City"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State",
            "description": "State/province"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code",
            "description": "ZIP/postal code"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Country"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp (ISO format)"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Last update timestamp (ISO format)"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "Completion timestamp (ISO format)"
          },
          "sales_rep_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sales Rep Id",
            "description": "Sales representative ID"
          },
          "sales_rep_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sales Rep Name",
            "description": "Sales representative name"
          },
          "provider": {
            "$ref": "#/components/schemas/CRMProvider",
            "description": "CRM provider name"
          },
          "provider_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Provider Data",
            "description": "Provider-specific data"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status",
          "provider"
        ],
        "title": "Job",
        "description": "Universal job model that works across all CRM providers."
      },
      "JobList": {
        "properties": {
          "jobs": {
            "items": {
              "$ref": "#/components/schemas/Job"
            },
            "type": "array",
            "title": "Jobs",
            "description": "List of jobs"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "description": "Total number of jobs"
          },
          "provider": {
            "$ref": "#/components/schemas/CRMProvider",
            "description": "CRM provider name"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page",
            "description": "Current page number (if paginated)"
          },
          "page_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Size",
            "description": "Page size (if paginated)"
          },
          "has_more": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has More",
            "description": "Whether more results exist"
          }
        },
        "type": "object",
        "required": [
          "jobs",
          "total_count",
          "provider"
        ],
        "title": "JobList",
        "description": "Universal job list response with pagination."
      },
      "Note": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id",
            "description": "Note identifier"
          },
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Note text content"
          },
          "entity_id": {
            "type": "string",
            "title": "Entity Id",
            "description": "ID of the entity this note belongs to"
          },
          "entity_type": {
            "type": "string",
            "title": "Entity Type",
            "description": "Type of entity (job, contact, project, etc.)"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id",
            "description": "Creator identifier"
          },
          "created_by_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Name",
            "description": "Creator name"
          },
          "created_at": {
            "type": "string",
            "title": "Created At",
            "description": "Creation timestamp (ISO format)"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Last update timestamp (ISO format)"
          },
          "is_pinned": {
            "type": "boolean",
            "title": "Is Pinned",
            "description": "Whether the note is pinned",
            "default": false
          },
          "provider": {
            "$ref": "#/components/schemas/CRMProvider",
            "description": "CRM provider name"
          },
          "provider_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Provider Data",
            "description": "Provider-specific data"
          }
        },
        "type": "object",
        "required": [
          "text",
          "entity_id",
          "entity_type",
          "created_at",
          "provider"
        ],
        "title": "Note",
        "description": "Universal note/activity model that works across all CRM providers."
      },
      "PaymentDetails": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status",
            "description": "Payment status: issued, not_issued, pending"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Amount",
            "description": "Payment amount"
          },
          "issue_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Issue Date",
            "description": "Date payment was issued"
          },
          "check_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Check Number",
            "description": "Check number"
          }
        },
        "type": "object",
        "title": "PaymentDetails",
        "description": "Provider-agnostic payment information from claim status calls."
      },
      "Project": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique project identifier (provider-specific format)"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Project name/title"
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number",
            "description": "Project number"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Current project status (provider-specific)"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id",
            "description": "Status identifier"
          },
          "sub_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub Status",
            "description": "Project sub-status name"
          },
          "sub_status_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub Status Id",
            "description": "Sub-status identifier"
          },
          "workflow_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workflow Type",
            "description": "Workflow/record type name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Project description"
          },
          "customer_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Id",
            "description": "Associated customer/contact ID"
          },
          "customer_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customer Name",
            "description": "Customer name"
          },
          "location_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location Id",
            "description": "Location identifier"
          },
          "address_line1": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Line1",
            "description": "Address line 1"
          },
          "address_line2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Line2",
            "description": "Address line 2"
          },
          "city": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "City",
            "description": "City"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State",
            "description": "State/province"
          },
          "postal_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Postal Code",
            "description": "ZIP/postal code"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country",
            "description": "Country"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "Creation timestamp (ISO format)"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Last update timestamp (ISO format)"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "Project start date (ISO format)"
          },
          "target_completion_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target Completion Date",
            "description": "Target completion date (ISO format)"
          },
          "actual_completion_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Actual Completion Date",
            "description": "Actual completion date (ISO format)"
          },
          "claim_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Claim Number",
            "description": "Insurance claim number"
          },
          "date_of_loss": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Loss",
            "description": "Date of loss (ISO format)"
          },
          "insurance_company": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Insurance Company",
            "description": "Insurance company/carrier name"
          },
          "adjuster_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Adjuster Name",
            "description": "Insurance adjuster name"
          },
          "adjuster_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Adjuster Phone",
            "description": "Insurance adjuster phone number"
          },
          "adjuster_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Adjuster Email",
            "description": "Insurance adjuster email address"
          },
          "sales_rep_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sales Rep Id",
            "description": "Sales representative ID"
          },
          "sales_rep_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sales Rep Name",
            "description": "Sales representative name"
          },
          "provider": {
            "$ref": "#/components/schemas/CRMProvider",
            "description": "CRM provider name"
          },
          "provider_data": {
            "additionalProperties": true,
            "type": "object",
            "title": "Provider Data",
            "description": "Provider-specific data"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status",
          "provider"
        ],
        "title": "Project",
        "description": "Universal project model that works across all CRM providers.\n\nIn hierarchical CRMs (Service Titan), projects are top-level containers that\nmay contain multiple jobs. In flat CRMs (JobNimbus), projects and jobs are\nthe same entity."
      },
      "ProjectList": {
        "properties": {
          "projects": {
            "items": {
              "$ref": "#/components/schemas/Project"
            },
            "type": "array",
            "title": "Projects",
            "description": "List of projects"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "description": "Total number of projects"
          },
          "provider": {
            "$ref": "#/components/schemas/CRMProvider",
            "description": "CRM provider name"
          },
          "page": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page",
            "description": "Current page number (if paginated)"
          },
          "page_size": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Size",
            "description": "Page size (if paginated)"
          },
          "has_more": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has More",
            "description": "Whether more results exist"
          }
        },
        "type": "object",
        "required": [
          "projects",
          "total_count",
          "provider"
        ],
        "title": "ProjectList",
        "description": "Universal project list response with pagination."
      },
      "RequiredActions": {
        "properties": {
          "documents_needed": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Documents Needed",
            "description": "List of required documents"
          },
          "submission_method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submission Method",
            "description": "Document submission method: email, portal, mail"
          },
          "next_steps": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Steps",
            "description": "Summary of next actions"
          }
        },
        "type": "object",
        "title": "RequiredActions",
        "description": "Provider-agnostic required actions from claim status calls."
      },
      "Role": {
        "type": "string",
        "enum": [
          "admin",
          "manager",
          "user"
        ],
        "title": "Role",
        "description": "User roles in the system."
      },
      "TranscriptMessage": {
        "properties": {
          "role": {
            "type": "string",
            "title": "Role",
            "description": "Speaker role: user, assistant, system"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Message content"
          },
          "timestamp_seconds": {
            "type": "number",
            "title": "Timestamp Seconds",
            "description": "Seconds from call start"
          },
          "duration_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Seconds",
            "description": "Message duration"
          }
        },
        "type": "object",
        "required": [
          "role",
          "content",
          "timestamp_seconds"
        ],
        "title": "TranscriptMessage",
        "description": "Provider-agnostic transcript message."
      },
      "User": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "User's unique identifier"
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "User's email address"
          },
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "User's full name"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "type": "null"
              }
            ],
            "description": "User's role"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id",
            "description": "User's organization ID"
          },
          "profile_picture": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Picture",
            "description": "User's profile picture URL"
          },
          "email_verified": {
            "type": "boolean",
            "title": "Email Verified",
            "description": "Whether user's email is verified",
            "default": false
          },
          "mfa_enabled": {
            "type": "boolean",
            "title": "Mfa Enabled",
            "description": "Whether MFA is enabled for the user",
            "default": false
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "User creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "User last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email"
        ],
        "title": "User",
        "description": "User information."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VoiceAIProvider": {
        "type": "string",
        "enum": [
          "vapi"
        ],
        "title": "VoiceAIProvider",
        "description": "Available Voice AI providers."
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}