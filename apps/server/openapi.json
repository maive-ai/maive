{
  "openapi": "3.1.0",
  "info": {
    "title": "Maive API",
    "description": "API for Maive application",
    "version": "0.1.0"
  },
  "paths": {
    "/api/auth/signout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Sign Out",
        "description": "Sign out the current user.\n\nInvalidates the current user's session and clears cookies.",
        "operationId": "sign_out_api_auth_signout_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get Current User Info",
        "description": "Get current user information.\n\nReturns the profile information of the currently authenticated user.",
        "operationId": "get_current_user_info_api_auth_me_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/callback": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Oauth Callback",
        "description": "OAuth2 callback endpoint for Cognito authentication.\n\nExchanges authorization code for tokens and redirects to frontend.",
        "operationId": "oauth_callback_api_auth_callback_get",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Code"
            }
          },
          {
            "name": "error",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Error"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh Token",
        "description": "Refresh access token using refresh token.\n\nUses the refresh token from cookies to get a new access token.",
        "operationId": "refresh_token_api_auth_refresh_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/projects/{project_id}/status": {
      "get": {
        "tags": [
          "CRM"
        ],
        "summary": "Get Project Status",
        "description": "Get the status of a specific project by ID.\n\nArgs:\n    project_id: The unique identifier for the project\n    crm_service: The CRM service instance from dependency injection\n\nReturns:\n    ProjectStatusResponse: The project status information\n\nRaises:\n    HTTPException: If the project is not found or an error occurs",
        "operationId": "get_project_status_api_crm_projects__project_id__status_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "project_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/projects/status": {
      "get": {
        "tags": [
          "CRM"
        ],
        "summary": "Get All Project Statuses",
        "description": "Get the status of all projects.\n\nArgs:\n    crm_service: The CRM service instance from dependency injection\n\nReturns:\n    ProjectStatusListResponse: List of all project statuses\n\nRaises:\n    HTTPException: If an error occurs while fetching project statuses",
        "operationId": "get_all_project_statuses_api_crm_projects_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectStatusListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/crm/{tenant}/estimates/{estimate_id}": {
      "get": {
        "tags": [
          "CRM"
        ],
        "summary": "Get Estimate",
        "description": "Get a specific estimate by ID.\n\nArgs:\n    tenant: The tenant ID\n    estimate_id: The unique identifier for the estimate\n    crm_service: The CRM service instance from dependency injection\n\nReturns:\n    EstimateResponse: The estimate information\n\nRaises:\n    HTTPException: If the estimate is not found or an error occurs",
        "operationId": "get_estimate_api_crm__tenant__estimates__estimate_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Tenant"
            }
          },
          {
            "name": "estimate_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Estimate Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/{tenant}/jobs/{job_id}": {
      "get": {
        "tags": [
          "CRM"
        ],
        "summary": "Get Job",
        "description": "Get a specific job by ID.\n\nArgs:\n    tenant: The tenant ID\n    job_id: The unique identifier for the job\n    crm_service: The CRM service instance from dependency injection\n\nReturns:\n    JobResponse: The job information\n\nRaises:\n    HTTPException: If the job is not found or an error occurs",
        "operationId": "get_job_api_crm__tenant__jobs__job_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Tenant"
            }
          },
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/{tenant}/estimates/items": {
      "get": {
        "tags": [
          "CRM"
        ],
        "summary": "Get Estimate Items",
        "description": "Get estimate items with optional filters.\n\nArgs:\n    tenant: The tenant ID\n    estimate_id: Optional estimate ID to filter items\n    ids: Optional comma-separated string of item IDs (max 50)\n    active: Optional active status filter (True, False, Any)\n    page: Optional page number for pagination\n    page_size: Optional page size for pagination (max 50)\n    crm_service: The CRM service instance from dependency injection\n\nReturns:\n    EstimateItemsResponse: The paginated list of estimate items\n\nRaises:\n    HTTPException: If an error occurs",
        "operationId": "get_estimate_items_api_crm__tenant__estimates_items_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Tenant"
            }
          },
          {
            "name": "estimate_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Estimate Id"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Ids"
            }
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Active"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page Size"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateItemsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/crm/{tenant}/jobs/{job_id}/notes": {
      "post": {
        "tags": [
          "CRM"
        ],
        "summary": "Add Job Note",
        "description": "Add a note to a specific job.\n\nArgs:\n    tenant: The tenant ID\n    job_id: The unique identifier for the job\n    text: The text content of the note\n    pin_to_top: Whether to pin the note to the top (optional)\n    crm_service: The CRM service instance from dependency injection\n\nReturns:\n    JobNoteResponse: The created note information\n\nRaises:\n    HTTPException: If the job is not found or an error occurs",
        "operationId": "add_job_note_api_crm__tenant__jobs__job_id__notes_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "tenant",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Tenant"
            }
          },
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Job Id"
            }
          },
          {
            "name": "text",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Text"
            }
          },
          {
            "name": "pin_to_top",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Pin To Top"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobNoteResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "description": "Root endpoint.",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/healthcheck": {
      "get": {
        "summary": "Healthcheck",
        "description": "Health check endpoint.",
        "operationId": "healthcheck_healthcheck_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Whether the operation was successful"
          },
          "session": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session",
            "description": "User session data"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if operation failed"
          },
          "requires_mfa": {
            "type": "boolean",
            "title": "Requires Mfa",
            "description": "Whether MFA is required",
            "default": false
          },
          "mfa_setup_required": {
            "type": "boolean",
            "title": "Mfa Setup Required",
            "description": "Whether MFA setup is required",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "AuthResponse",
        "description": "Schema for authentication responses."
      },
      "CRMProvider": {
        "type": "string",
        "enum": [
          "service_titan"
        ],
        "title": "CRMProvider",
        "description": "Available CRM providers."
      },
      "EstimateItemResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "ID of the estimate item"
          },
          "sku": {
            "$ref": "#/components/schemas/SkuModel",
            "description": "SKU details"
          },
          "skuAccount": {
            "type": "string",
            "title": "Skuaccount",
            "description": "SKU account"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Item description"
          },
          "membershipTypeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Membershiptypeid",
            "description": "Membership type ID"
          },
          "qty": {
            "type": "number",
            "title": "Qty",
            "description": "Quantity"
          },
          "unitRate": {
            "type": "number",
            "title": "Unitrate",
            "description": "Unit rate"
          },
          "total": {
            "type": "number",
            "title": "Total",
            "description": "Total amount"
          },
          "unitCost": {
            "type": "number",
            "title": "Unitcost",
            "description": "Unit cost"
          },
          "totalCost": {
            "type": "number",
            "title": "Totalcost",
            "description": "Total cost"
          },
          "itemGroupName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Itemgroupname",
            "description": "Item group name"
          },
          "itemGroupRootId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Itemgrouprootid",
            "description": "Item group root ID"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "title": "Createdon",
            "description": "Date/time (in UTC) when the item was created"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "title": "Modifiedon",
            "description": "Date/time (in UTC) when the item was last modified"
          },
          "chargeable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chargeable",
            "description": "Whether the item is chargeable"
          },
          "invoiceItemId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoiceitemid",
            "description": "The invoice item which was created from this estimate item"
          },
          "budgetCodeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Budgetcodeid",
            "description": "Budget code ID"
          }
        },
        "type": "object",
        "required": [
          "id",
          "sku",
          "skuAccount",
          "description",
          "qty",
          "unitRate",
          "total",
          "unitCost",
          "totalCost",
          "createdOn",
          "modifiedOn"
        ],
        "title": "EstimateItemResponse",
        "description": "Response model for estimate item information."
      },
      "EstimateItemsResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/EstimateItemResponse"
            },
            "type": "array",
            "title": "Items",
            "description": "List of estimate items"
          },
          "total_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total Count",
            "description": "Total count of items (if requested)"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Page size"
          },
          "has_more": {
            "type": "boolean",
            "title": "Has More",
            "description": "Whether there are more items"
          }
        },
        "type": "object",
        "required": [
          "items",
          "page",
          "page_size",
          "has_more"
        ],
        "title": "EstimateItemsResponse",
        "description": "Response model for estimate items list."
      },
      "EstimateResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "ID of the estimate"
          },
          "jobId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobid",
            "description": "ID of the associated job"
          },
          "projectId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Projectid",
            "description": "ID of the associated project"
          },
          "locationId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locationid",
            "description": "ID of the location"
          },
          "customerId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customerid",
            "description": "ID of the customer"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Name of the estimate"
          },
          "jobNumber": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobnumber",
            "description": "Job number"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EstimateStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Status of the estimate"
          },
          "reviewStatus": {
            "$ref": "#/components/schemas/EstimateReviewStatus",
            "description": "Review status of the estimate"
          },
          "summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary",
            "description": "Summary of the estimate"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "title": "Createdon",
            "description": "Date/time (in UTC) when the estimate was created"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "title": "Modifiedon",
            "description": "Date/time (in UTC) when estimate was last modified"
          },
          "soldOn": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Soldon",
            "description": "Date/time (in UTC) when the estimate was sold"
          },
          "soldBy": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Soldby",
            "description": "ID of who sold the estimate"
          },
          "active": {
            "type": "boolean",
            "title": "Active",
            "description": "Whether the estimate is active"
          },
          "subtotal": {
            "type": "number",
            "title": "Subtotal",
            "description": "Subtotal amount"
          },
          "tax": {
            "type": "number",
            "title": "Tax",
            "description": "Tax amount"
          },
          "businessUnitId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Businessunitid",
            "description": "ID of the business unit"
          },
          "businessUnitName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Businessunitname",
            "description": "Name of the business unit"
          },
          "isRecommended": {
            "type": "boolean",
            "title": "Isrecommended",
            "description": "Whether this estimate is recommended"
          },
          "budgetCodeId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Budgetcodeid",
            "description": "ID of the budget code"
          },
          "isChangeOrder": {
            "type": "boolean",
            "title": "Ischangeorder",
            "description": "Whether this estimate is a change order"
          }
        },
        "type": "object",
        "required": [
          "id",
          "reviewStatus",
          "createdOn",
          "modifiedOn",
          "active",
          "subtotal",
          "tax",
          "isRecommended",
          "isChangeOrder"
        ],
        "title": "EstimateResponse",
        "description": "Response model for Service Titan estimate information."
      },
      "EstimateReviewStatus": {
        "type": "string",
        "enum": [
          "None",
          "NeedsApproval",
          "Approved",
          "NotApproved"
        ],
        "title": "EstimateReviewStatus",
        "description": "Estimate review status values."
      },
      "EstimateStatus": {
        "properties": {
          "value": {
            "type": "integer",
            "title": "Value",
            "description": "Status value"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Status name"
          }
        },
        "type": "object",
        "required": [
          "value",
          "name"
        ],
        "title": "EstimateStatus",
        "description": "Estimate status model with value and name."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "JobNoteResponse": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Text content of the note"
          },
          "isPinned": {
            "type": "boolean",
            "title": "Ispinned",
            "description": "Whether the note is pinned to the top"
          },
          "createdById": {
            "type": "integer",
            "title": "Createdbyid",
            "description": "ID of user who created this note"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "title": "Createdon",
            "description": "Date/time (in UTC) the note was created"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "title": "Modifiedon",
            "description": "Date/time (in UTC) the note was modified"
          }
        },
        "type": "object",
        "required": [
          "text",
          "isPinned",
          "createdById",
          "createdOn",
          "modifiedOn"
        ],
        "title": "JobNoteResponse",
        "description": "Response model for job note."
      },
      "JobResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "ID of the job"
          },
          "jobNumber": {
            "type": "string",
            "title": "Jobnumber",
            "description": "Job number"
          },
          "projectId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Projectid",
            "description": "ID of the job's project"
          },
          "customerId": {
            "type": "integer",
            "title": "Customerid",
            "description": "ID of the job's customer"
          },
          "locationId": {
            "type": "integer",
            "title": "Locationid",
            "description": "ID of the job's location"
          },
          "jobStatus": {
            "type": "string",
            "title": "Jobstatus",
            "description": "Status of the job"
          },
          "completedOn": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completedon",
            "description": "Date/time (in UTC) when the job was completed"
          },
          "businessUnitId": {
            "type": "integer",
            "title": "Businessunitid",
            "description": "ID of the job's business unit"
          },
          "jobTypeId": {
            "type": "integer",
            "title": "Jobtypeid",
            "description": "ID of job type"
          },
          "priority": {
            "type": "string",
            "title": "Priority",
            "description": "Priority of the job"
          },
          "campaignId": {
            "type": "integer",
            "title": "Campaignid",
            "description": "ID of the job's campaign"
          },
          "appointmentCount": {
            "type": "integer",
            "title": "Appointmentcount",
            "description": "Number of appointments on the job"
          },
          "firstAppointmentId": {
            "type": "integer",
            "title": "Firstappointmentid",
            "description": "ID of the first appointment on the job"
          },
          "lastAppointmentId": {
            "type": "integer",
            "title": "Lastappointmentid",
            "description": "ID of the last appointment on the job"
          },
          "recallForId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recallforid",
            "description": "ID of the job for which this job is a recall"
          },
          "warrantyId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warrantyid",
            "description": "ID of the job for which this job is a warranty"
          },
          "noCharge": {
            "type": "boolean",
            "title": "Nocharge",
            "description": "Whether the job is a no-charge job"
          },
          "notificationsEnabled": {
            "type": "boolean",
            "title": "Notificationsenabled",
            "description": "Whether notifications will be sent to customers"
          },
          "createdOn": {
            "type": "string",
            "format": "date-time",
            "title": "Createdon",
            "description": "Date/time (in UTC) when the job was created"
          },
          "createdById": {
            "type": "integer",
            "title": "Createdbyid",
            "description": "ID of the user who created the job"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "title": "Modifiedon",
            "description": "Date/time (in UTC) when job was last modified"
          },
          "tagTypeIds": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Tagtypeids",
            "description": "Tags on the job"
          },
          "customerPo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Customerpo",
            "description": "Customer PO"
          },
          "invoiceId": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invoiceid",
            "description": "ID of the invoice associated with this job"
          },
          "total": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Total",
            "description": "Total amount of the job"
          },
          "summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary",
            "description": "Job summary"
          }
        },
        "type": "object",
        "required": [
          "id",
          "jobNumber",
          "customerId",
          "locationId",
          "jobStatus",
          "businessUnitId",
          "jobTypeId",
          "priority",
          "campaignId",
          "appointmentCount",
          "firstAppointmentId",
          "lastAppointmentId",
          "noCharge",
          "notificationsEnabled",
          "createdOn",
          "createdById",
          "modifiedOn",
          "tagTypeIds"
        ],
        "title": "JobResponse",
        "description": "Response model for Service Titan job information."
      },
      "ProjectStatusListResponse": {
        "properties": {
          "projects": {
            "items": {
              "$ref": "#/components/schemas/ProjectStatusResponse"
            },
            "type": "array",
            "title": "Projects",
            "description": "List of project statuses"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "description": "Total number of projects"
          },
          "provider": {
            "$ref": "#/components/schemas/CRMProvider",
            "description": "CRM provider"
          }
        },
        "type": "object",
        "required": [
          "projects",
          "total_count",
          "provider"
        ],
        "title": "ProjectStatusListResponse",
        "description": "Response model for multiple project statuses."
      },
      "ProjectStatusResponse": {
        "properties": {
          "project_id": {
            "type": "string",
            "title": "Project Id",
            "description": "Unique project identifier"
          },
          "status": {
            "$ref": "#/components/schemas/Status",
            "description": "Current project status"
          },
          "provider": {
            "$ref": "#/components/schemas/CRMProvider",
            "description": "CRM provider"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "Last status update timestamp"
          },
          "provider_data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Data",
            "description": "Provider-specific data"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "status",
          "provider"
        ],
        "title": "ProjectStatusResponse",
        "description": "Response model for project status information."
      },
      "Role": {
        "type": "string",
        "enum": [
          "admin",
          "manager",
          "user"
        ],
        "title": "Role",
        "description": "User roles in the system."
      },
      "SkuModel": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id",
            "description": "SKU ID"
          },
          "name": {
            "type": "string",
            "title": "Name",
            "description": "SKU name"
          },
          "displayName": {
            "type": "string",
            "title": "Displayname",
            "description": "Display name"
          },
          "type": {
            "type": "string",
            "title": "Type",
            "description": "SKU type"
          },
          "soldHours": {
            "type": "number",
            "title": "Soldhours",
            "description": "Sold hours"
          },
          "generalLedgerAccountId": {
            "type": "integer",
            "title": "Generalledgeraccountid",
            "description": "General ledger account ID"
          },
          "generalLedgerAccountName": {
            "type": "string",
            "title": "Generalledgeraccountname",
            "description": "General ledger account name"
          },
          "modifiedOn": {
            "type": "string",
            "format": "date-time",
            "title": "Modifiedon",
            "description": "Date/time (in UTC) when SKU was last modified"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "displayName",
          "type",
          "soldHours",
          "generalLedgerAccountId",
          "generalLedgerAccountName",
          "modifiedOn"
        ],
        "title": "SkuModel",
        "description": "SKU model for estimate items."
      },
      "Status": {
        "type": "string",
        "enum": [
          "Scheduled",
          "Dispatched",
          "InProgress",
          "Hold",
          "Completed",
          "Canceled"
        ],
        "title": "Status",
        "description": "Status values for Service Titan jobs and projects."
      },
      "User": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "User's unique identifier"
          },
          "email": {
            "type": "string",
            "title": "Email",
            "description": "User's email address"
          },
          "name": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 128,
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "User's full name"
          },
          "role": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Role"
              },
              {
                "type": "null"
              }
            ],
            "description": "User's role"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id",
            "description": "User's organization ID"
          },
          "profile_picture": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Profile Picture",
            "description": "User's profile picture URL"
          },
          "email_verified": {
            "type": "boolean",
            "title": "Email Verified",
            "description": "Whether user's email is verified",
            "default": false
          },
          "mfa_enabled": {
            "type": "boolean",
            "title": "Mfa Enabled",
            "description": "Whether MFA is enabled for the user",
            "default": false
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At",
            "description": "User creation timestamp"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At",
            "description": "User last update timestamp"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email"
        ],
        "title": "User",
        "description": "User information."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}